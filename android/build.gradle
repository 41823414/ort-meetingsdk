buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has('kotlinVersion') ? rootProject.ext.get('kotlinVersion') : project.properties['ZoomMeetingSDK_kotlinVersion']

  repositories {
    google()
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:7.3.1'
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['ZoomMeetingSDK_' + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties['ZoomMeetingSDK_' + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault('compileSdkVersion')
  buildToolsVersion getExtOrDefault('buildToolsVersion')
  defaultConfig {
    minSdkVersion 26
    targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
    versionCode 1
    versionName "1.0"
    ndkVersion = "24.0.8215888"

  }

  viewBinding {
    enabled = true
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }
  lintOptions {
    disable 'GradleCompatible'
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_11
    targetCompatibility JavaVersion.VERSION_11
  }
}

repositories {
  google()
  mavenCentral()
  jcenter()

  def found = false
  def defaultDir = null
  def androidSourcesName = 'React Native sources'

  if (rootProject.ext.has('reactNativeAndroidRoot')) {
    defaultDir = rootProject.ext.get('reactNativeAndroidRoot')
  } else {
    defaultDir = new File(
            projectDir,
            '/../../../node_modules/react-native/android'
    )
  }

  if (defaultDir.exists()) {
    maven {
      url defaultDir.toString()
      name androidSourcesName
    }

    logger.info(":${project.name}:reactNativeAndroidRoot ${defaultDir.canonicalPath}")
    found = true
  } else {
    def parentDir = rootProject.projectDir

    1.upto(5, {
      if (found) return true
      parentDir = parentDir.parentFile

      def androidSourcesDir = new File(
              parentDir,
              'node_modules/react-native'
      )

      def androidPrebuiltBinaryDir = new File(
              parentDir,
              'node_modules/react-native/android'
      )

      if (androidPrebuiltBinaryDir.exists()) {
        maven {
          url androidPrebuiltBinaryDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidPrebuiltBinaryDir.canonicalPath}")
        found = true
      } else if (androidSourcesDir.exists()) {
        maven {
          url androidSourcesDir.toString()
          name androidSourcesName
        }

        logger.info(":${project.name}:reactNativeAndroidRoot ${androidSourcesDir.canonicalPath}")
        found = true
      }
    })
  }

  if (!found) {
    throw new GradleException(
            "${project.name}: unable to locate React Native android sources. " +
                    "Ensure you have you installed React Native as a dependency in your project and try again."
    )
  }
}

def kotlin_version = getExtOrDefault('kotlinVersion')

dependencies {
  // noinspection GradleDynamicVersion
  api 'com.facebook.react:react-android:+'
  implementation "androidx.security:security-crypto:1.1.0-alpha05"
  implementation "com.google.crypto.tink:tink-android:1.7.0"
  implementation "com.google.android.exoplayer:exoplayer-core:2.17.1"
  implementation "com.google.android.exoplayer:exoplayer-ui:2.17.1"
  implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
  implementation "androidx.appcompat:appcompat:1.6.1"
  implementation "androidx.constraintlayout:constraintlayout:2.1.0"
  implementation "com.google.android.material:material:1.11.0"
  implementation "androidx.multidex:multidex:2.0.1"
  implementation "com.google.code.gson:gson:2.11.0"
  implementation "com.github.bumptech.glide:annotations:4.11.0"
  implementation "com.github.bumptech.glide:glide:4.11.0"
  implementation "androidx.recyclerview:recyclerview:1.2.1"
  implementation "com.airbnb.android:lottie:4.0.0"
  implementation "androidx.window:window:1.1.0"
  implementation "androidx.window:window-java:1.1.0"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:1.7.20"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.20"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
  implementation "androidx.core:core-ktx:1.8.0"
  implementation "androidx.core:core:1.13.0"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2"
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.2"
  implementation "androidx.lifecycle:lifecycle-service:2.6.2"
  implementation "androidx.work:work-runtime:2.9.0"

  implementation "androidx.fragment:fragment-ktx:1.4.1"
  implementation "com.davemorrissey.labs:subsampling-scale-image-view:3.10.0"
  implementation "androidx.core:core-splashscreen:1.0.1"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.2"
  implementation "io.reactivex.rxjava3:rxandroid:3.0.2"
  implementation "androidx.compose.material3:material3:1.2.1"
  implementation "androidx.compose.material3:material3-window-size-class:1.2.1"
  implementation "androidx.compose.ui:ui-tooling-preview:1.6.0"
  implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
  implementation "androidx.activity:activity-compose:1.6.1"
  implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.2"
  implementation "androidx.navigation:navigation-compose:2.7.7"
  implementation "io.coil-kt:coil-compose:2.3.0"
  implementation "androidx.webkit:webkit:1.9.0"
  implementation "org.jetbrains:annotations:23.0.0"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.7.1"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-swing:1.7.1"
  implementation "androidx.camera:camera-core:1.4.1"
  implementation "androidx.camera:camera-camera2:1.4.1"
  implementation "androidx.camera:camera-lifecycle:1.4.1"
  implementation "androidx.camera:camera-lifecycle:1.4.1"
  implementation "androidx.camera:camera-view:1.4.1"
  implementation "com.google.mlkit:text-recognition:16.0.1"
  implementation "com.blueparrott:blueparrottsdk:4.8.2"

  implementation 'us.zoom.meetingsdk:zoomsdk:6.5.6'
}
